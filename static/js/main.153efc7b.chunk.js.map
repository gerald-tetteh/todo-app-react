{"version":3,"sources":["components/InputField.js","images/icon-moon.svg","images/icon-sun.svg","images/icon-cross.svg","components/TodoList.js","components/TodoActionButtons.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","inputText","setInputText","handleCreateTodo","className","value","onChange","e","target","type","placeholder","onKeyUp","TodoList","todoList","handleDeleteTodo","handleSetCompleted","closeIcon","map","todo","completed","onClick","id","key","task","src","alt","TodoActionButtons","state","dispatch","all","active","Home","htmlTag","document","querySelector","useState","todos","setTodos","moonIcon","themeIcon","setThemeIcon","useEffect","window","localStorage","getItem","sunIcon","options","useReducer","_","action","filter","setItem","which","uuid4","selectedTodoIndex","findIndex","selectedTodo","newTodos","splice","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.153efc7b.chunk.js","sourcesContent":["const InputField = ({ inputText, setInputText, handleCreateTodo }) => {\n  return (\n    <div className=\"input mt-md mb-sm\">\n      <div className=\"checkbox\"></div>\n      <input\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n        type=\"text\"\n        className=\"input__field\"\n        placeholder=\"Create a new todo...\"\n        onKeyUp={handleCreateTodo}\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","const TodoList = ({\n  todoList,\n  handleDeleteTodo,\n  handleSetCompleted,\n  closeIcon,\n}) => {\n  return (\n    <div className=\"todo__list\">\n      {todoList.map((todo) => {\n        return (\n          <li className=\"todo__list-item\" key={todo.key}>\n            {!todo.completed && (\n              <div\n                className=\"todo__checkbox\"\n                onClick={handleSetCompleted}\n                id={todo.key}\n              ></div>\n            )}\n            {todo.completed && (\n              <div\n                className=\"todo__checkbox todo__checkbox--checked\"\n                id={todo.key}\n                onClick={handleSetCompleted}\n              ></div>\n            )}\n            <p className=\"todo__text\">{todo.task}</p>\n            <img\n              src={closeIcon}\n              alt=\"Close button\"\n              className=\"todo__cross\"\n              onClick={handleDeleteTodo}\n              id={todo.key}\n            />\n          </li>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TodoList;\n","const TodoActionButtons = ({ state, dispatch }) => {\n  return (\n    <div className=\"todo__action-buttons\">\n      <button\n        className={`todo__button ${state.all && \"active\"}`}\n        onClick={() => dispatch({ type: \"all\" })}\n      >\n        All\n      </button>\n      <button\n        className={`todo__button ${state.active && \"active\"}`}\n        onClick={() => dispatch({ type: \"active\" })}\n      >\n        Active\n      </button>\n      <button\n        className={`todo__button ${state.completed && \"active\"}`}\n        onClick={() => dispatch({ type: \"completed\" })}\n      >\n        Completed\n      </button>\n    </div>\n  );\n};\n\nexport default TodoActionButtons;\n","import { useEffect, useReducer, useState } from \"react\";\nimport { v4 as uuid4 } from \"uuid\";\n\nimport InputField from \"./components/InputField\";\nimport moonIcon from \"./images/icon-moon.svg\";\nimport sunIcon from \"./images/icon-sun.svg\";\nimport closeIcon from \"./images/icon-cross.svg\";\nimport TodoList from \"./components/TodoList\";\nimport TodoActionButtons from \"./components/TodoActionButtons\";\n\nconst Home = () => {\n  const htmlTag = document.querySelector(\"html\");\n  const [todos, setTodos] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [themeIcon, setThemeIcon] = useState(moonIcon);\n\n  useEffect(() => {\n    if (window.localStorage.getItem(\"theme\") === \"light-theme\") {\n      htmlTag.className = \"light-theme\";\n      setThemeIcon(moonIcon);\n    } else {\n      htmlTag.className = \"dark-theme\";\n      setThemeIcon(sunIcon);\n    }\n  }, []);\n\n  const handleChangeTheme = () => {\n    if (window.localStorage.getItem(\"theme\") === \"light-theme\") {\n      htmlTag.className = \"dark-theme\";\n      window.localStorage.setItem(\"theme\", \"dark-theme\");\n      setThemeIcon(sunIcon);\n    } else {\n      htmlTag.className = \"light-theme\";\n      window.localStorage.setItem(\"theme\", \"light-theme\");\n      setThemeIcon(moonIcon);\n    }\n  };\n  const handleCreateTodo = (e) => {\n    if (e.which === 13) {\n      setTodos([\n        ...todos,\n        { task: e.target.value, completed: false, key: uuid4() },\n      ]);\n      setInputText(\"\");\n    }\n  };\n  const handleDeleteTodo = (e) =>\n    setTodos(todos.filter((todo) => todo.key !== e.target.id));\n  const handleSetCompleted = (e) => {\n    const selectedTodoIndex = todos.findIndex(\n      (todo) => todo.key === e.target.id\n    );\n    const selectedTodo = todos.filter((todo) => todo.key === e.target.id)[0];\n    selectedTodo.completed = !selectedTodo.completed;\n    let newTodos = todos.filter((todo) => todo.key !== e.target.id);\n    newTodos.splice(selectedTodoIndex, 0, selectedTodo);\n    setTodos(newTodos);\n  };\n  const handleClearCompleted = () => {\n    const newTodos = todos.filter((todo) => !todo.completed);\n    setTodos(newTodos);\n  };\n  const handleTodoList = (options) => {\n    if (options.all) {\n      return todos;\n    } else if (options.active) {\n      return todos.filter((todo) => todo.completed !== true);\n    } else {\n      return todos.filter((todo) => todo.completed);\n    }\n  };\n  const reducer = (_, action) => {\n    switch (action.type) {\n      case \"all\":\n        return { all: true, active: false, completed: false };\n      case \"active\":\n        return { all: false, active: true, completed: false };\n      case \"completed\":\n        return { all: false, active: false, completed: true };\n      default:\n        return { all: true, active: false, completed: false };\n    }\n  };\n  const init = { all: true, active: false, completed: false };\n\n  const [state, dispatch] = useReducer(reducer, init);\n  const todoList = handleTodoList(state);\n\n  return (\n    <div className=\"home\">\n      <div className=\"home__box\">\n        <div className=\"home__title-bar\">\n          <h1 className=\"heading-primary\">todo</h1>\n          <img\n            src={themeIcon}\n            alt=\"Theme switch icon\"\n            className=\"home__theme-icon\"\n            onClick={handleChangeTheme}\n          />\n        </div>\n\n        <InputField\n          handleCreateTodo={handleCreateTodo}\n          setInputText={setInputText}\n          inputText={inputText}\n        />\n\n        <div className=\"list-container\">\n          <TodoList\n            closeIcon={closeIcon}\n            handleDeleteTodo={handleDeleteTodo}\n            handleSetCompleted={handleSetCompleted}\n            todoList={todoList}\n          />\n          <div className=\"todo__bottom-bar\">\n            <p className=\"todo__items-left\">\n              {todoList.length} item{todoList.length > 1 ? \"s\" : \"\"} left\n            </p>\n            <TodoActionButtons state={state} dispatch={dispatch} />\n            <p className=\"todo__clear-button\" onClick={handleClearCompleted}>\n              Clear Completed\n            </p>\n          </div>\n        </div>\n        <p className=\"small-text text-align-center mt-md\">\n          Drag and drop to reorder list\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import Home from \"./Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/style.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}