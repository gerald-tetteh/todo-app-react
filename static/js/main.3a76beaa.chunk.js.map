{"version":3,"sources":["components/InputField.js","images/icon-moon.svg","images/icon-sun.svg","images/icon-cross.svg","components/TodoList.js","components/TodoActionButtons.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","inputText","setInputText","handleCreateTodo","className","value","onChange","e","target","type","placeholder","onKeyUp","TodoList","todoList","handleDeleteTodo","handleSetCompleted","closeIcon","onDrag","onDrop","onDragOver","map","todo","draggable","onDragStart","id","key","completed","onClick","task","src","alt","TodoActionButtons","state","dispatch","all","active","Home","dragging","draggingOver","htmlTag","document","querySelector","useState","todos","setTodos","moonIcon","themeIcon","setThemeIcon","useEffect","window","localStorage","getItem","sunIcon","options","useReducer","_","action","filter","reverse","setItem","which","trim","uuid4","selectedTodoIndex","findIndex","selectedTodo","newTodos","splice","preventDefault","parentElement","draggedTodo","draggedOverTodo","draggedTodoIndex","draggedOverTodoIndex","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3a76beaa.chunk.js","sourcesContent":["const InputField = ({ inputText, setInputText, handleCreateTodo }) => {\n  return (\n    <div className=\"input mt-md mb-sm\">\n      <div className=\"checkbox\"></div>\n      <input\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n        type=\"text\"\n        className=\"input__field\"\n        placeholder=\"Create a new todo...\"\n        onKeyUp={handleCreateTodo}\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","const TodoList = ({\n  todoList,\n  handleDeleteTodo,\n  handleSetCompleted,\n  closeIcon,\n  onDrag,\n  onDrop,\n  onDragOver,\n}) => {\n  return (\n    <ul className=\"todo__list\">\n      {todoList.map((todo) => {\n        return (\n          <li\n            className=\"todo__list-item\"\n            key={todo.key}\n            draggable={true}\n            onDragStart={onDrag}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n            id={todo.key}\n          >\n            {!todo.completed && (\n              <div\n                className=\"todo__checkbox\"\n                onClick={handleSetCompleted}\n                id={todo.key}\n              ></div>\n            )}\n            {todo.completed && (\n              <div\n                className=\"todo__checkbox todo__checkbox--checked\"\n                id={todo.key}\n                onClick={handleSetCompleted}\n              ></div>\n            )}\n            <p\n              className={`todo__text ${todo.completed ? \"completed-text\" : \"\"}`}\n            >\n              {todo.task}\n            </p>\n            <img\n              src={closeIcon}\n              alt=\"Close button\"\n              className=\"todo__cross\"\n              onClick={handleDeleteTodo}\n              id={todo.key}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","const TodoActionButtons = ({ state, dispatch }) => {\n  return (\n    <div className=\"todo__action-buttons\">\n      <button\n        className={`todo__button ${state.all && \"active\"}`}\n        onClick={() => dispatch({ type: \"all\" })}\n      >\n        All\n      </button>\n      <button\n        className={`todo__button ${state.active && \"active\"}`}\n        onClick={() => dispatch({ type: \"active\" })}\n      >\n        Active\n      </button>\n      <button\n        className={`todo__button ${state.completed && \"active\"}`}\n        onClick={() => dispatch({ type: \"completed\" })}\n      >\n        Completed\n      </button>\n    </div>\n  );\n};\n\nexport default TodoActionButtons;\n","import { useEffect, useReducer, useState } from \"react\";\nimport { v4 as uuid4 } from \"uuid\";\n\nimport InputField from \"./components/InputField\";\nimport moonIcon from \"./images/icon-moon.svg\";\nimport sunIcon from \"./images/icon-sun.svg\";\nimport closeIcon from \"./images/icon-cross.svg\";\nimport TodoList from \"./components/TodoList\";\nimport TodoActionButtons from \"./components/TodoActionButtons\";\n\nconst Home = () => {\n  const htmlTag = document.querySelector(\"html\");\n  const [todos, setTodos] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [themeIcon, setThemeIcon] = useState(moonIcon);\n\n  let dragging;\n  let draggingOver;\n\n  useEffect(() => {\n    if (window.localStorage.getItem(\"theme\") === \"light-theme\") {\n      htmlTag.className = \"light-theme\";\n      setThemeIcon(moonIcon);\n    } else {\n      htmlTag.className = \"dark-theme\";\n      setThemeIcon(sunIcon);\n    }\n  }, []);\n\n  const handleChangeTheme = () => {\n    if (window.localStorage.getItem(\"theme\") === \"light-theme\") {\n      htmlTag.className = \"dark-theme\";\n      window.localStorage.setItem(\"theme\", \"dark-theme\");\n      setThemeIcon(sunIcon);\n    } else {\n      htmlTag.className = \"light-theme\";\n      window.localStorage.setItem(\"theme\", \"light-theme\");\n      setThemeIcon(moonIcon);\n    }\n  };\n  const handleCreateTodo = (e) => {\n    if (e.which === 13) {\n      setTodos([\n        ...todos,\n        { task: e.target.value.trim(), completed: false, key: uuid4() },\n      ]);\n      setInputText(\"\");\n    }\n  };\n  const handleDeleteTodo = (e) =>\n    setTodos(todos.filter((todo) => todo.key !== e.target.id));\n  const handleSetCompleted = (e) => {\n    const selectedTodoIndex = todos.findIndex(\n      (todo) => todo.key === e.target.id\n    );\n    const selectedTodo = todos.filter((todo) => todo.key === e.target.id)[0];\n    selectedTodo.completed = !selectedTodo.completed;\n    let newTodos = todos.filter((todo) => todo.key !== e.target.id);\n    newTodos.splice(selectedTodoIndex, 0, selectedTodo);\n    setTodos(newTodos);\n  };\n  const handleClearCompleted = () => {\n    const newTodos = todos.filter((todo) => !todo.completed);\n    setTodos(newTodos);\n  };\n  const handleTodoList = (options) => {\n    if (options.all) {\n      return [...todos];\n    } else if (options.active) {\n      return todos.filter((todo) => todo.completed !== true);\n    } else {\n      return todos.filter((todo) => todo.completed);\n    }\n  };\n  const handleDragging = (e) => (dragging = e.target.id);\n  const handleDraggingOver = (e) => {\n    e.preventDefault();\n    if (e.target.className === \"todo__text\") {\n      draggingOver = e.target.parentElement.id;\n    } else {\n      draggingOver = e.target.id;\n    }\n  };\n  const handleDrop = (e) => {\n    const draggedTodo = todos.filter((todo) => todo.key === dragging)[0];\n    const draggedOverTodo = todos.filter(\n      (todo) => todo.key === draggingOver\n    )[0];\n    const draggedTodoIndex = todos.findIndex((todo) => todo.key === dragging);\n    const draggedOverTodoIndex = todos.findIndex(\n      (todo) => todo.key === draggingOver\n    );\n    const todoList = [...todos];\n    todoList.splice(draggedOverTodoIndex, 1, draggedTodo);\n    todoList.splice(draggedTodoIndex, 1, draggedOverTodo);\n    setTodos(todoList);\n  };\n  const reducer = (_, action) => {\n    switch (action.type) {\n      case \"all\":\n        return { all: true, active: false, completed: false };\n      case \"active\":\n        return { all: false, active: true, completed: false };\n      case \"completed\":\n        return { all: false, active: false, completed: true };\n      default:\n        return { all: true, active: false, completed: false };\n    }\n  };\n  const init = { all: true, active: false, completed: false };\n\n  const [state, dispatch] = useReducer(reducer, init);\n  const todoList = handleTodoList(state).reverse();\n\n  return (\n    <div className=\"home\">\n      <div className=\"home__box\">\n        <div className=\"home__title-bar\">\n          <h1 className=\"heading-primary\">todo</h1>\n          <img\n            src={themeIcon}\n            alt=\"Theme switch icon\"\n            className=\"home__theme-icon\"\n            onClick={handleChangeTheme}\n          />\n        </div>\n\n        <InputField\n          handleCreateTodo={handleCreateTodo}\n          setInputText={setInputText}\n          inputText={inputText}\n        />\n\n        <div className=\"list-container\">\n          <TodoList\n            closeIcon={closeIcon}\n            handleDeleteTodo={handleDeleteTodo}\n            handleSetCompleted={handleSetCompleted}\n            todoList={todoList}\n            onDrag={handleDragging}\n            onDragOver={handleDraggingOver}\n            onDrop={handleDrop}\n          />\n          <div className=\"todo__bottom-bar\">\n            <p className=\"todo__items-left\">\n              {todoList.length} item{todoList.length > 1 ? \"s\" : \"\"} left\n            </p>\n            <TodoActionButtons state={state} dispatch={dispatch} />\n            <p className=\"todo__clear-button\" onClick={handleClearCompleted}>\n              Clear Completed\n            </p>\n          </div>\n        </div>\n        <div className=\"todo__bottom-bar todo__bottom-bar--single mt-sm\">\n          <TodoActionButtons state={state} dispatch={dispatch} />\n        </div>\n        <p className=\"small-text text-align-center mt-md\">\n          Drag and drop to reorder list\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import Home from \"./Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/style.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}